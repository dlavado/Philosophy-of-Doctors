
# Description: config file for default parameters of scenenet_ts40k experiment
# Author: Diogo Mateus

project:
  value: 'TS40K'
output_dir: 
  value: '${experiment_path}/outputs'
# ------------------ #
# dataset config
# ------------------ #
dataset:
  value: 'ts40k'
preprocessed:
  value: True
  description: 'If True, uses the preprocessed the dataset'
load_into_memory:
  value: True
data_path:
  value: ''
add_normals:
  value: False
  description: 'If True, adds normals to the dataset'
num_classes:
  value: 6
num_data_channels:
  value: 3
  description: 'Number of channels in the dataset'
batch_size:
  value: 2
ignore_index:
  value: -1 # noise
num_workers: 
  value: 0
val_split:
  value: 0.1
test_split:
  value: 0.3
fps_points:
  value: 10000
min_points:
  value: null
  description: 'Number of points to sample from the point cloud with farthest point sampling'
# ------------------ #
# model config
# ------------------ #
model:
  value: 'pointnet2-gibli'
model_hash:
  value: 'pointnet2_gibli_gib8_nknn16_ob32'
in_channels:
  value: 3 # xyz coords
  description: 'Number of channels in the input'
#### GIBLi Parameters ####
gib_dict:
  value: {
    'cy'    : 8,
    'ellip' : 8,
    'disk'  : 8,
    'cone'  : 8,
    'h-cy'  : 8,
    'h-ellip': 8,
    'h-disk' : 8,
    'h-cone' : 8,
  }
  description: 'Dictionary of GIBs'
num_observers:
  value: [32]
  description: 'Number of observers'
kernel_reach:
  value: 0.1
  description: 'Kernel reach of GIBs'
neighbor_size:
  value: [16]
  description: 'Number of neighbors'
out_channels:
  value: 8
  description: 'Number of output channels'
# ------------------ #
# training config
# ------------------ #
optimizer:
  value: 'adamw' #'adam' 
learning_rate:
  value: 0.0001
max_epochs:
  value: 100 # -1 for infinite
accelerator:
  value: 'gpu' # 'ddp' or 'dp'
devices:
  value: -1 # -1 for all available gpus
num_nodes:
  value: 1
strategy:
  value: 'auto' # 'ddp'
early_stop_metric:
  value: 'val_MulticlassJaccardIndex'
# ------------------ #
# criterion addons config
# ------------------ #
criterion:
  value: 'cross_entropy' # this is not in use
  description: 'Loss function' # this is not in use since pointnet models have their own loss function
class_weights:
  value: True
  description: 'Use class weights in the loss function'
segmentation_losses:
  value: {'focal': 0.2, 'tversky': 0.2, 'lovasz': 0.2}
  description: 'Additional losses for segmentation'
# ------------------ #
# Lit Trainer config
# ------------------ #
fast_dev_run:
  value: True
precision: # 16 or 32 FPU precision
  value: 32
  description: 'FPU precision'
auto_lr_find:
  value: False
auto_scale_batch_size:
  value: True
profiler:
  value: False
  description: 'PyTorch Lightning profiler'
accumulate_grad_batches:
  value: 2
  description: 'Accumulate gradients on k batches before performing a backward pass'
save_onnx:
  value: False
  description: 'Save model in onnx format'
# ------------------ #
# Checkpoint config
# ------------------ #
resume_from_checkpoint:
  value: False
checkpoint_dir:
  value: '${experiment_path}/pointnet/'
  # value: '${experiment_path}/pointnet++/'
resume_checkpoint_name:
  value: MulticlassJaccardIndex # 'FbetaScore', 'train_loss', last, 'best', 'F1Score'
checkpoint_every_n_epochs: # This parameter and the next one are mutually exclusive
  value: 1 # every n epochs
checkpoint_every_n_steps:
  value: 0 # every n steps
  
