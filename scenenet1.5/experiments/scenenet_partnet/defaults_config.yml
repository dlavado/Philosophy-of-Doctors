
# Description: config file for default parameters of scenenet_ts40k experiment
# Author: Diogo Mateus

project:
  value: 'SceneNet1.5'
output_dir: 
  value: 'experiments/scenenet_ts40k/outputs'
# ------------------ #
# dataset config
# ------------------ #
dataset:
  value: 'partnet'
data_path:
  value: ''
num_classes:
  value: 3
ignore_index:
  value: -1
coarse_level:
  value: 1
keep_objects:
  value: "['Laptop']"
batch_size:
  value: 16
voxel_grid_size:
  value: (64, 64, 64)
voxel_size:
  value: None
num_workers:
  value: 12
fps_points:
  value: 10000 
  description: 'Number of points to sample from the point cloud with farthest point sampling'
# ------------------ #
# model config
# ------------------ #
model:
  value: 'scenenet'
cylinder_geneo:
  value: 10
arrow_geneo:
  value: 10
neg_sphere_geneo:
  value: 10
disk_geneo:
  value: 10
cone_geneo:
  value: 10
ellipsoid_geneo:
  value: 10
num_observers:
  value: 10
kernel_size:
  value: (6, 6, 6)
hidden_dims:
  value: "[512, 256, 128, 64, 32]"
# ------------------ #
# training config
# ------------------ #
optimizer:
  value: 'adam' #'adam' 
learning_rate:
  value: 0.0001
max_epochs:
  value: 150 # -1 for infinite
accelerator:
  value: 'gpu' # 'ddp' or 'dp'
devices:
  value: -1 # -1 for all available gpus
early_stop_metric:
  value: 'val_MulticlassJaccardIndex'
# ------------------ #
#criterion config
# ------------------ #
criterion:
  value: 'geneo_tversky'
geneo_criterion:
  value: True
  description: 'If True, uses the geneo wrapper criterion, otherwise uses the standard criterion'
weighting_scheme_path:
  value: 'core/criterions/hist_estimation.pickle'
convex_weight:
  value: 0.1
tversky_alpha:
  value: 2
tversky_beta:
  value: 1
tversky_smooth:
  value: 1.0e-6
focal_gamma:
  value: 4
# ------------------ #
# Lit Trainer config
# ------------------ #
fast_dev_run:
  value: True
precision: # 16 or 32 FPU precision
  value: 16
  description: 'FPU precision'
auto_lr_find:
  value: False
auto_scale_batch_size:
  value: True
profiler:
  value: False
  description: 'PyTorch Lightning profiler'
accumulate_grad_batches:
  value: 1
  description: 'Accumulate gradients on k batches before performing a backward pass'
save_onnx:
  value: False
  description: 'Save model in onnx format'
# ------------------ #
# Checkpoint config
# ------------------ #
resume_from_checkpoint:
  value: False
checkpoint_dir:
  value: 'experiments/scenenet_ts40k/checkpoints'
resume_checkpoint_name:
  value: MulticlassJaccardIndex
checkpoint_every_n_epochs: # This parameter and the next one are mutually exclusive
  value: 1 # every n epochs
checkpoint_every_n_steps:
  value: 0 # every n steps
  
